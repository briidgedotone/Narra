---
description: 
globs: 
alwaysApply: true
---
# 🧭 Use Narra – Cursor Rules

## 📌 Project Identity
**Name:** Use Narra  
**Type:** SaaS – Content Curation & Inspiration  
**Audience:** Marketers, Content Creators, Brands  
**Platforms:** Web (Responsive)

---

## 🔐 Authentication & Access Control

- Use **Clerk** for user authentication (fallback: Supabase Auth).
- All protected routes should be gated by auth middleware.
- Guests can view the **landing page only**; dashboard requires login.
- Admin dashboard requires admin role check (`role = admin`).

---

## 🧰 Project Structure & Conventions

- Use a **monorepo** if separating frontend and backend (e.g., with TurboRepo).
- Use **Next.js (App Router)** with server actions for full-stack integration.
- Use **TypeScript** across all files (strict mode enabled).
- Use **ShadCN UI** + **TailwindCSS** for consistent design system.
- All reusable components go under `/components/ui/` or `/components/shared/`.
- Use **environment variables** for all secrets and API keys.

---

## 📊 Data & Content Rules

- Post and profile data fetched via **ScrapeCreators** (never client-side scraping).
- Cache post results using Redis or Supabase Edge Cache for performance.
- Use a standardized format for content metrics (e.g., 1.2K, 3.5M).
- Post objects must include: `platform`, `embedURL`, `metrics`, `datePosted`, `transcript`, and `originProfile`.

---

## 💾 Database Rules

- Use **PostgreSQL** (via Supabase or Prisma).
- Core tables:
  - `users`, `profiles`, `posts`, `boards`, `folders`, `follows`, `subscriptions`
- Boards belong to folders; posts belong to boards.
- Public board sharing must reference a hashed, unguessable `public_id`.

---

## 🧪 Feature Flags & MVP Scope

- Only MVP features allowed until v1.0 release (see MVP plan).
- Disable or stub incomplete features behind flags.
- Daily content refresh for following page must run as a **cron job** or **background task**.

---

## 🧩 Component Rules

- All post grid layouts follow the same **Pinterest-style format**.
- Embed UI must **overlay** native TikTok/Instagram elements (clean interface).
- Transcripts appear in a separate `Transcript` tab inside Post Detail view.
- Save Post, Follow Profile, and Copy Transcript must be **one-click actions**.

---

## 💳 Stripe Rules

- Stripe products must match those on landing page pricing.
- On signup:
  - Route A: Plan → Sign Up → Stripe → Dashboard
  - Route B: Sign Up → Plan → Stripe → Dashboard
- Stripe webhooks update user subscription status in DB.
- Use Stripe Customer Portal for all subscription management.

---

## 💬 Email Rules

- Use **Loops Email API** for all onboarding and email capture.
- Capture email + plan details on signup → send to Loops list.

---

## 🚫 Security & Compliance

- No scraping from frontend; always proxy through backend or ScrapeCreators.
- Secure all API routes using `auth()` and `role()` checks.
- Do not expose API keys, access tokens, or user PII to frontend.

---

## 🛠 Deployment Rules

- Use **Vercel** for frontend deployment.
- Use **Supabase** or **Railway** for backend/db deployments.
- Every commit to `main` must trigger preview deployment.
- Use GitHub Actions or Vercel's CI for deployment previews.

---

## 🧠 Dev Guidelines

- All feature branches must start with prefix: `feature/`, `fix/`, or `chore/`.
- Code must pass Prettier, ESLint, and TypeScript checks before merging.
- All features should be developed with MVP constraints in mind.

---

## 📤 API & Integration Notes

- External Integrations:
  - ScrapeCreators – Social data
  - Stripe – Payments
  - Loops – Email
- All integrations must be abstracted in service wrappers (e.g., `/lib/api/loops.ts`).

---

## 🧹 Cleanup & Optimization

- Remove unused components, hooks, and stale branches weekly.
- Use lazy loading and code-splitting for performance-heavy views.

---

## 🏁 Launch Checklist

- [ ] Stripe live keys set and tested
- [ ] All routes protected by auth
- [ ] Daily post fetch for following accounts operational
- [ ] Loops email list receiving signups
- [ ] Shared boards functional and styled
- [ ] Mobile responsive layout tested

---
